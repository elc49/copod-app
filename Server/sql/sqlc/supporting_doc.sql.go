// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: supporting_doc.sql

package sql

import (
	"context"
)

const createSupportDoc = `-- name: CreateSupportDoc :one
INSERT INTO support_docs (
  govt_id, email, wallet_address
) VALUES (
  $1, $2, $3
) RETURNING id, govt_id, verification, email, wallet_address, created_at, updated_at
`

type CreateSupportDocParams struct {
	GovtID        string `json:"govt_id"`
	Email         string `json:"email"`
	WalletAddress string `json:"wallet_address"`
}

func (q *Queries) CreateSupportDoc(ctx context.Context, arg CreateSupportDocParams) (SupportDoc, error) {
	row := q.db.QueryRowContext(ctx, createSupportDoc, arg.GovtID, arg.Email, arg.WalletAddress)
	var i SupportDoc
	err := row.Scan(
		&i.ID,
		&i.GovtID,
		&i.Verification,
		&i.Email,
		&i.WalletAddress,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getEmailSupportDoc = `-- name: GetEmailSupportDoc :one
SELECT id, govt_id, verification, email, wallet_address, created_at, updated_at FROM support_docs
WHERE email = $1 LIMIT 1
`

func (q *Queries) GetEmailSupportDoc(ctx context.Context, email string) (SupportDoc, error) {
	row := q.db.QueryRowContext(ctx, getEmailSupportDoc, email)
	var i SupportDoc
	err := row.Scan(
		&i.ID,
		&i.GovtID,
		&i.Verification,
		&i.Email,
		&i.WalletAddress,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateEmailSupportDoc = `-- name: UpdateEmailSupportDoc :one
UPDATE support_docs SET govt_id = $1, verification = $2
WHERE email = $3
RETURNING id, govt_id, verification, email, wallet_address, created_at, updated_at
`

type UpdateEmailSupportDocParams struct {
	GovtID       string `json:"govt_id"`
	Verification string `json:"verification"`
	Email        string `json:"email"`
}

func (q *Queries) UpdateEmailSupportDoc(ctx context.Context, arg UpdateEmailSupportDocParams) (SupportDoc, error) {
	row := q.db.QueryRowContext(ctx, updateEmailSupportDoc, arg.GovtID, arg.Verification, arg.Email)
	var i SupportDoc
	err := row.Scan(
		&i.ID,
		&i.GovtID,
		&i.Verification,
		&i.Email,
		&i.WalletAddress,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
