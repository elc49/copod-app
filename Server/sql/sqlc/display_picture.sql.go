// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: display_picture.sql

package sql

import (
	"context"

	"github.com/google/uuid"
)

const createDisplayPicture = `-- name: CreateDisplayPicture :one
INSERT INTO display_pictures (
  url, email, support_doc_id
) VALUES (
  $1, $2, $3
) RETURNING id, url, verification, email, support_doc_id, created_at, updated_at
`

type CreateDisplayPictureParams struct {
	Url          string    `json:"url"`
	Email        string    `json:"email"`
	SupportDocID uuid.UUID `json:"support_doc_id"`
}

func (q *Queries) CreateDisplayPicture(ctx context.Context, arg CreateDisplayPictureParams) (DisplayPicture, error) {
	row := q.db.QueryRowContext(ctx, createDisplayPicture, arg.Url, arg.Email, arg.SupportDocID)
	var i DisplayPicture
	err := row.Scan(
		&i.ID,
		&i.Url,
		&i.Verification,
		&i.Email,
		&i.SupportDocID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getDisplayPictureByID = `-- name: GetDisplayPictureByID :one
SELECT id, url, verification, email, support_doc_id, created_at, updated_at FROM display_pictures
WHERE id = $1
`

func (q *Queries) GetDisplayPictureByID(ctx context.Context, id uuid.UUID) (DisplayPicture, error) {
	row := q.db.QueryRowContext(ctx, getDisplayPictureByID, id)
	var i DisplayPicture
	err := row.Scan(
		&i.ID,
		&i.Url,
		&i.Verification,
		&i.Email,
		&i.SupportDocID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateDisplayPictureByID = `-- name: UpdateDisplayPictureByID :one
UPDATE display_pictures SET url = $1
WHERE id = $2
RETURNING id, url, verification, email, support_doc_id, created_at, updated_at
`

type UpdateDisplayPictureByIDParams struct {
	Url string    `json:"url"`
	ID  uuid.UUID `json:"id"`
}

func (q *Queries) UpdateDisplayPictureByID(ctx context.Context, arg UpdateDisplayPictureByIDParams) (DisplayPicture, error) {
	row := q.db.QueryRowContext(ctx, updateDisplayPictureByID, arg.Url, arg.ID)
	var i DisplayPicture
	err := row.Scan(
		&i.ID,
		&i.Url,
		&i.Verification,
		&i.Email,
		&i.SupportDocID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
